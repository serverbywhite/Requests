#!/usr/bin/env python3
__𝝖𝗨𝗧𝝜𝝤𝗥__ = {"𝙈𝙞𝙣𝙝𝘼𝙣𝙝𝙨 ᕁ 𝙅𝙪𝙣𝙞𝙙𝙤 𝙆𝙖𝙞 ᕁ 𝙒𝙝𝙞𝙩𝙚𝙉𝙉 ᕁ 𝙕𝙪"}
__𝗘𝝢𝗖__ = {"__𝙊𝘽𝙁__ ᕁ __𝙀𝙉𝘾__"}
__𝝦𝝪𝗧𝗛𝗢𝝢__ = {"𝟯.𝟭𝟮"}
__𝝢𝝖𝗠𝗘__𝗘𝝢𝗖__ = {"𝙋𝙮𝙈𝙖𝙆𝙖𝙞𝙯𝙪"}
__𝗘𝝢𝗖__𝗠𝗢𝗗𝗘__ = {"𝙎𝙝𝙖𝙙𝙤𝙬𝙒𝙝𝙞𝙩𝙚"}
__𝗩𝗘𝗥𝗦𝗜𝗢𝝢__𝗘𝝢𝗖__ = {"𝟮𝟰.𝟮.𝟲.𝟮.𝟭𝟭.𝟳"}
__𝗪𝗮𝗿𝗻𝗶𝗻𝗴__ = {"Hãy Dùng Mã Hóa Này Một Cách Hợp Pháp"}
__𝗪𝗮𝗿𝗻𝗶𝗻𝗴__ = {"Cẩn thận trước khi Running hãy chắc rằng nó an toàn"}

import sys, os, hashlib, traceback, threading, zlib
def _anti_checks():
    if sys.gettrace() is not None:
        raise MemoryError('dbg detected')
    bad = {'uncompyle6','decompyle3','pycdc','frida','pydevd','debugpy','gdb'}
    for m in list(sys.modules):
        if m.split('.')[0] in bad:
            raise MemoryError('suspicious module')
    for v in ('PYTHONINSPECT','PYDEV_DEBUG','FRIDA'):
        if os.environ.get(v):
            raise MemoryError('suspicious env')
try:
    _anti_checks()
except Exception:
    try:
        for k in list(globals().keys()):
            globals().pop(k, None)
    finally:
        raise
L2 = ''
_bi = __import__(''.join(map(chr,[98,117,105,108,116,105,110,115])))
_b64mod = __import__(''.join(map(chr,[98,97,115,101,54,52])))
l2 = _b64mod.__dict__[''.join(map(chr,[98,54,52,100,101,99,111,100,101]))](L2)
l2_src = l2.__getattribute__('decode')('utf-8')
h = hashlib.sha256(l2).hexdigest()
if h[:6] == '000000':
    raise MemoryError('tamper')
ns = {''.join(map(chr,[95,95,110,97,109,101,95,95])): ''.join(map(chr,[95,95,109,97,105,110,95,95])), ''.join(map(chr,[95,95,102,105,108,101,95,95])): (globals().get(''.join(map(chr,[95,95,102,105,108,101,95,95]))) if ''.join(map(chr,[95,95,102,105,108,101,95,95])) in globals() else ( (getattr(sys, ''.join(map(chr,[97,114,103,118])), None)[0]) if getattr(sys, ''.join(map(chr,[97,114,103,118])), None) else ''.join(map(chr,[60,115,116,117,98,62])))), ''.join(map(chr,[95,95,98,117,105,108,116,105,110,115,95,95])): _bi}
_code = _bi.__dict__[''.join(map(chr,[99,111,109,112,105,108,101]))](l2_src, ''.join(map(chr,[60,108,97,121,101,114,50,95,115,114,99,62])), ''.join(map(chr,[101,120,101,99])))
_orig_key = ''.join(map(chr,[95,111,114,105,103,95,101,120,101,99]))
_orig_val = globals().get(_orig_key) or _bi.__dict__[''.join(map(chr,[101,120,101,99]))]
globals()[_orig_key] = _orig_val
_obf_name = ''.join(map(chr,[101,120,101,99]))
_bi.__dict__.setdefault(_obf_name, _bi.__dict__[''.join(map(chr,[101,120,101,99]))])
_curr_exec = _bi.__dict__[''.join(map(chr,[101,120,101,99]))]
try:
    name_ok = getattr(_curr_exec, ''.join(map(chr,[95,95,110,97,109,101,95,95])), '') == ''.join(map(chr,[101,120,101,99]))
    id_ok = id(_curr_exec) == id(_orig_val)
except Exception:
    name_ok = False
    id_ok = False
if not (name_ok and id_ok):
    try:
        _bi.exec = _orig_val
        _bi.__dict__[_obf_name] = _orig_val
    except Exception:
        _bi.__dict__[_obf_name] = _orig_val
getattr(_bi, _obf_name)(_code, ns, ns)
